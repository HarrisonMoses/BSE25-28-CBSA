services:
  # 1. Django Web Service
  - type: web
    name: server
    runtime: python
    buildCommand: |
      cd server && pip install -r requirements.txt
    startCommand: |
      cd server && gunicorn server.wsgi:application
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: prod_db
          property: connectionString
      - key: SECRET_KEY 
        generateValue: true
      - key: REDIS_URL
        fromService:
          name: redis-prod
          type: redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: redis-prod
          type: redis
          property: connectionString
      - key: OPENAI_API_KEY
        value: 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
      - key: DJANGO_SETTINGS_MODULE
        value: server.settings.prod

  # 2. Celery Worker
  - type: worker
    name: celery-worker
    runtime: python
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A server worker --loglevel=info
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: redis-prod
          type: redis
          property: connectionString

  # 3. Celery Beat (Scheduler)
  - type: worker
    name: celery-beat
    runtime: python
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A server beat --loglevel=info 
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: redis-prod
          type: redis
          property: connectionString

  # 4. Redis (Celery Broker)
  - type: redis
    name: redis-prod
    plan: free 
    ipAllowList: [] 

  # 5. PostgreSQL Database
databases:
  - name: prod_db 
    postgresMajorVersion: '16'
    region: frankfurt 
    plan: free 
    databaseName: prod_db 
    user: root_user 
    ipAllowList: [] 
      
    
    