# Generated by Django 5.1.6 on 2025-02-23 13:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('crop', models.CharField(max_length=255, unique=True)),
                ('min_ideal_nitrogen', models.FloatField()),
                ('min_ideal_phosphorous', models.FloatField()),
                ('min_ideal_potassium', models.FloatField()),
                ('max_ideal_nitrogen', models.FloatField()),
                ('max_ideal_phosphorous', models.FloatField()),
                ('max_ideal_potassium', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('farm_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('device_name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='app.farm')),
            ],
        ),
        migrations.CreateModel(
            name='FarmCrop',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to='app.crop')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='app.farm')),
            ],
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('moisture_level', models.FloatField()),
                ('temperature', models.FloatField()),
                ('nitrogen', models.FloatField()),
                ('phosphorous', models.FloatField()),
                ('potassium', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='app.device')),
            ],
        ),
        migrations.CreateModel(
            name='CropRecommendation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('recommendation_details', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sensor_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='app.sensordata')),
            ],
        ),
        migrations.AddField(
            model_name='farm',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to='app.user'),
        ),
    ]
